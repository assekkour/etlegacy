language: cpp

# use newer Trusty images
sudo: required
dist: precise

# Test matrix:
# - Build matrix per compiler: C++11/C++14 + Debug/Release
# - Optionally: AddressSanitizer (ASAN)
# - Valgrind: all release builds are also tested with valgrind
# - clang 3.5, 3.6, trunk
#     the rest are only tested with ASAN=On.
# - gcc 4.9, 5

matrix:
  include:

  # Mac OS X
  - env: BUILD_TYPE=Release LIBCXX=On
  - os: osx
  - compiler: clang


  # Linux, gcc-4.9
  - env: GCC_VERSION=4.9
  - compiler: &gcc49
    addons:
      apt:
      source:
        - ubuntu-toolchains-r-test
      packages:
        - gcc-4.9
        - g++-4.9


  # Linux, gcc-4.9
  - env: GCC_VERSION=5
  - compiler: &gcc5
    addons:
      apt:
      source:
        - ubuntu-toolchains-r-test
      packages:
        - gcc-5
        - g++-5


  # Linux, clang 3.8
  - env: CLANG_VERSION=3.8
  - compiler: &clang38
    addons:
      apt:
      source:
        - ubuntu-toolchains-r-test
        - llvm-toolchain-precise-3.8
      packages:
        - clang-3.8


before_install:
  - sudo apt-get update -qq
  - if [ -n "$GCC_VERSION" ]; then export CXX="g++-${GCC_VERSION}" CC="gcc-${GCC_VERSION}"; fi
  - if [ -n "$CLANG_VERSION" ]; then export CXX="clang++-${CLANG_VERSION}" CC="clang-${CLANG_VERSION}"; fi
  - which $CXX
  - which $CC
  - $CXX --version

env:
  native:
    - CROSS_COMPILE32=0
    - BUNDLED_LIBS=1
    - BUNDLED_SDL=1
    - BUNDLED_ZLIB=1
    - BUNDLED_MINIZIP=1
    - BUNDLED_JPEG=1
    - BUNDLED_LUA=1
    - BUNDLED_OGG=1


before_script:
  - ./misc/travis-setup.sh


script:
  - ./easybuild.sh


notifications:
  irc:
    template:
      - "%{repository}#%{build_number} %{commit} %{author}: %{message} %{build_url}"
    channels:
      - "irc.freenode.org#etlegacy"
    use_notice: true
    skip_join: true
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/5a93d4b59447e6129a58
    on_success: change
    on_failure: always
    on_start: never
